module lexicals

imports

	common

lexical syntax

	Identifier					= [a-zA-Z] [a-zA-Z0-9]*
	TypeConstIdentifier			= [A-Z] [a-zA-Z0-9]*
	Integer						= [0-9]+

	// All reserved keywords that we use which cannot be used as identifiers or type constructs

	Identifier.Let    			= "let"   {reject}
	Identifier.Rec    			= "rec"   {reject}
	Identifier.Match  			= "match" {reject}
	Identifier.With   			= "with"  {reject}
	Identifier.Type   			= "type"  {reject}
	Identifier.True 			= "true"  {reject}
	Identifier.False  			= "false" {reject}
	Identifier.Int    			= "int"   {reject}
	Identifier.Bool   			= "bool"  {reject}
	Identifier.List   			= "list"  {reject}
	Identifier.If   			= "if"    {reject}
	Identifier.Else   			= "else"  {reject}

	TypeConstIdentifier.Let    	= "let"   {reject}
	TypeConstIdentifier.Rec    	= "rec"   {reject}
	TypeConstIdentifier.Match  	= "match" {reject}
	TypeConstIdentifier.With   	= "with"  {reject}
	TypeConstIdentifier.Type   	= "type"  {reject}
	TypeConstIdentifier.True 	= "true"  {reject}
	TypeConstIdentifier.False  	= "false" {reject}
	TypeConstIdentifier.Int    	= "int"   {reject}
	TypeConstIdentifier.Bool   	= "bool"  {reject}
	TypeConstIdentifier.List   	= "list"  {reject}
	TypeConstIdentifier.If   	= "if"    {reject}
	TypeConstIdentifier.Else   	= "else"  {reject}

lexical restrictions

	Identifier          		-/- [a-zA-Z0-9]
	TypeConstIdentifier 		-/- [a-zA-Z0-9]
	Integer             		-/- [a-zA-Z0-9]

lexical syntax start-symbols

	Identifier
	TypeConstIdentifier
	Integer