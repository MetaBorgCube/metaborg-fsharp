module desugar

signature
	sorts Expression
	constructors
	
	// Binary Operations
	
	Plus					: Exp * Exp -> Exp
	Min						: Exp * Exp -> Exp
	Mult					: Exp * Exp -> Exp
	Concat					: Exp * Exp -> Exp
	And						: Exp * Exp -> Exp
	Or						: Exp * Exp -> Exp
	
	BinaryOperation			: BinaryOperand * Exp * Exp -> Exp
	
	PlusOp					: BinaryOperand
	MinOp					: BinaryOperand
	MultOp					: BinaryOperand
	ConcatOp				: BinaryOperand
	AndOp					: BinaryOperand
	OrOp					: BinaryOperand
	
	// Unary Operations
	
	Negative				: Exp -> Exp
	Not						: Exp -> Exp
	
	UnaryOperation			: UnaryOperand * Exp -> Exp
	
	NegativeOp				: BinaryOperand
	NotOp					: BinaryOperand
	
rules

	desugar: Plus(a, b)		-> BinaryOperation(PlusOp(), a, b)
	desugar: Min(a, b)		-> BinaryOperation(MinOp(), a, b)
	desugar: Mult(a, b)		-> BinaryOperation(MultOp(), a, b)
	desugar: Concat(a, b)	-> BinaryOperation(ConcatOp(), a, b)
	desugar: And(a, b)		-> BinaryOperation(AndOp(), a, b)
	desugar: Or(a, b)		-> BinaryOperation(OrOp(), a, b)
	
	desugar: Negative(a)	-> UnaryOperation(NegativeOp(), a)
	desugar: Not(a)			-> UnaryOperation(NotOp(), a)
	