module desugar

imports
	src-gen/signatures/minifsharp-sig

signature
sorts 

	BinaryOperation	BinaryOperand
	UnaryOperation	UnaryOperand

constructors
	
	// Binary Operations
	
	BinaryOperation				: BinaryOperand * Expression * Expression -> Expression
	

	PlusOp						: BinaryOperand
	MinOp						: BinaryOperand
	MultOp						: BinaryOperand
	ConcatOp					: BinaryOperand
	AndOp						: BinaryOperand
	OrOp						: BinaryOperand
	
	// Tuples

	TupleType					: List(Type) -> Type
	TupleExp					: List(Expression) -> Expression
	
	// Unary Operations
	
	UnaryOperation				: UnaryOperand * Expression -> Expression
	
	NegativeOp					: BinaryOperand
	NotOp						: BinaryOperand
	
rules
	
	// Binary Operations

	desugar: Plus(a, b)					-> BinaryOperation(PlusOp(), a, b)
	desugar: Min(a, b)					-> BinaryOperation(MinOp(), a, b)
	desugar: Mult(a, b)					-> BinaryOperation(MultOp(), a, b)
	desugar: Concat(a, b)				-> BinaryOperation(ConcatOp(), a, b)
	desugar: And(a, b)					-> BinaryOperation(AndOp(), a, b)
	desugar: Or(a, b)					-> BinaryOperation(OrOp(), a, b)
	
	// Unary Operations
	
	desugar: Negative(a)				-> UnaryOperation(NegativeOp(), a)
	desugar: Not(a)						-> UnaryOperation(NotOp(), a)
	
	// Match Rules
	
	desugar: Rules(a, b)				-> <concat> [[a], b]
	desugar: RulesEscaped(a, b)			-> <concat> [[a], b]
	desugar: RuleFirst(a, b)			-> Rule(a, b)

	// Tuple rules
	
	desugar: SugaredTupleType(a,b)	-> TupleType(<concat> [[a], b])
	desugar: SugaredTupleExp(a,b)	-> TupleExp (<concat> [[a], b])
	
	// Let binding rule
	
	desugar: LetExp(x) 				-> x
	
	